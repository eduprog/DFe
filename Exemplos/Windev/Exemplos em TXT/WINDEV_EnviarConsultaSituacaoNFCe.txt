//Criar as configurações mínimas necessárias para consumir o serviço
oConfiguracao is Unimake.Business.DFe.Servicos.Configuracao()
oConfiguracao.TipoDFe				= TipoDFe.NFCe
oConfiguracao.CertificadoArquivo	= "C:\Projetos\certificados\UnimakePV.pfx"
oConfiguracao.CertificadoSenha		= "12345678"

//Criar tag ConsSitNFe
oConsSitNFe is Unimake.Business.DFe.XML.NFe.ConsSitNFe
oConsSitNFe.Versao		= "4.00"
oConsSitNFe.TpAmb		= TipoAmbiente.Homologacao
oConsSitNFe.ChNFe		= "41240106117473000150550300000000121905645770"

//Resgatar algumas informações do objeto do XML
EDT_RetornoWSString		= "Versao schema: " + CR + oConsSitNFe.Versao + CR + CR
EDT_RetornoWSString += "Chave NFe: " + CR + oConsSitNFe.ChNFe + CR + CR

WHEN EXCEPTION IN
	//Consumir o serviço
	oConsultaProtocolo is Unimake.Business.DFe.Servicos.NFCe.ConsultaProtocolo()
	oConsultaProtocolo.Executar(oConsSitNFe, oConfiguracao)
	
	//Pegar a string do XML da consulta situação, o que foi enviado para a SEFAZ
	EDT_RetornoWSString += "XML da consulta:" + CR
	EDT_RetornoWSString += oConsultaProtocolo.GetConteudoXMLAssinado() + CR  + CR
	
	//Ver retorno da SEFAZ
	EDT_RetornoWSString += "XML Retornado SEFAZ: " + CR + oConsultaProtocolo.RetornoWSString + CR + CR
	
	IF oConsultaProtocolo.Result.CStat = 100 //100 = NFe autorizada
		EDT_RetornoWSString += "CStat: " + CR + oConsultaProtocolo.Result.CStat + CR + CR 
		EDT_RetornoWSString += "XMotivo: " + CR + oConsultaProtocolo.Result.XMotivo + CR + CR 
	ELSE
		EDT_RetornoWSString += "CStat: " + CR + oConsultaProtocolo.Result.CStat + CR + CR 
		EDT_RetornoWSString += "XMotivo: " + CR + oConsultaProtocolo.Result.XMotivo + CR + CR 		
	END
DO
	Info(ExceptionInfo(errFullDetails)) //Ele também pega o conteúdo da Exception do lado do C#, importante envolver o código em Try/Catch
END
