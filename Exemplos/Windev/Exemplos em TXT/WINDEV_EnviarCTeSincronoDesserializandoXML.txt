//Criar as configurações mínimas necessárias para consumir o serviço
oConfiguracao is Unimake.Business.DFe.Servicos.Configuracao()
oConfiguracao.TipoDFe				= TipoDFe.CTe
oConfiguracao.TipoEmissao			= TipoEmissao.Normal
oConfiguracao.CertificadoArquivo	= "C:\Projetos\certificados\UnimakePV.pfx"
oConfiguracao.CertificadoSenha		= "12345678"

// Criar grupo de tag <CTe>
oCTe	is Unimake.Business.DFe.XML.CTe.CTe 

//Desserializar o XML para criar o objeto a partir de um arquivo no HD
oCTe <- oCTe.LoadFromFile("D:\testenfe\41240331905001000109570010000008611017220674-cte.xml")

//Desserializar o XML para criar o objeto a partir da string do XML
//xmlCTe is string=floadtext("D:\testenfe\41240331905001000109570010000008611017220674-cte.xml")
//oCTe <- oCTe.LoadFromXML(xmlCTe)  

//Recuperar algumas informações do objeto do CTe
EDT_RetornoWSString		= "<chCTe> " + oCTe.InfCTe.Chave + CR 
EDT_RetornoWSString += "<cCT> " + oCTe.InfCTe.Ide.CCT + CR 
EDT_RetornoWSString += "<nCT> " + oCTe.InfCTe.Ide.NCT + CR 

WHEN EXCEPTION IN
	//Consumir o serviço
	oAutorizacaoSinc is Unimake.Business.DFe.Servicos.CTe.AutorizacaoSinc()	
	oAutorizacaoSinc.SetXMLConfiguracao(oCTe, oConfiguracao)      
	
	//Pode-se gravar o conteudo do XML assinado na base de dados antes do envio, caso queira recuperar para futuro tratamento, isso da garantias
	xmlCTeAssinado is string = oAutorizacaoSinc.GetConteudoCTeAssinado(0)	
	
	// Demonstrar o XML do CTe assinado na tela
	EDT_RetornoWSString += "XML CTe assinado: " + CR + CR + xmlCTeAssinado + CR + CR
	
	// Gravar o XML assinado no HD antes de enviar
	chaveCTe is string = oCTe.InfCTe.Chave
	fDelete("d:\testenfe\" + chaveCTe + "-cte.xml")
	fSaveText("d:\testenfe\" + chaveCTe + "-cte.xml", xmlCTeAssinado)
	
	oAutorizacaoSinc.Executar(oCTe, oConfiguracao)
	
	//Ver a string do XML retornado pela SEFAZ
	EDT_RetornoWSString += "Retorno do webservice: " + CR + CR + oAutorizacaoSinc.RetornoWSString + CR + CR
	
	EDT_RetornoWSString += "<cStat Lote> " + oAutorizacaoSinc.Result.CStat + CR 
	EDT_RetornoWSString += "<xMotivo Lote>" + oAutorizacaoSinc.Result.XMotivo + CR + CR
	
	IF oAutorizacaoSinc.Result.CStat = 104 // 104 = Lote processado com sucesso
		EDT_RetornoWSString += "<cStat CTe> " + oAutorizacaoSinc.Result.ProtCTe.InfProt.CStat + CR 
		EDT_RetornoWSString += "<xMotivo CTe>" + oAutorizacaoSinc.Result.ProtCTe.InfProt.XMotivo + CR + CR
		
		IF oAutorizacaoSinc.Result.ProtCTe.InfProt.CStat = 100 // CTe autorizado
			//Gravar o XML de distribuição do CTe no HD, se preferir assim.
			oAutorizacaoSinc.GravarXmlDistribuicao("d:\testenfe")
			
			//Pegar a string do XML de distribuição para gravar na base de dados, se preferir assim.  
			stringXmlDistribuicao is string = oAutorizacaoSinc.GetCteProcResults(oCTe.InfCTe.Chave)
			
			EDT_RetornoWSString += "XML de Distribuição: " + CR + CR + stringXmlDistribuicao
		ELSE
			//Cte rejeitado, fazer devidos tratamentos
		END
	ELSE
		//Cte rejeitado, fazer devidos tratamentos		
	END
	
	Info("FIM")	
DO
	Info(ExceptionInfo(errFullDetails)) //Ele também pega o conteúdo da Exception do lado do C#, importante envolver o código em Try/Catch
END