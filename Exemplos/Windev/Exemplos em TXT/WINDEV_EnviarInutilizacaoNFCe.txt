//Criar as configurações mínimas necessárias para consumir o serviço
oConfiguracao is Unimake.Business.DFe.Servicos.Configuracao()
oConfiguracao.TipoDFe				= TipoDFe.NFCe
oConfiguracao.CertificadoArquivo	= "C:\Users\Wandrey\Downloads\SW Comércio_123456.p12"
oConfiguracao.CertificadoSenha		= "123456"

//Criar tag inutNFe
oInutNFe is Unimake.Business.DFe.XML.NFe.InutNFe
oInutNFe.Versao	= "4.00"

//Criar tag infInut
oInfInut			is Unimake.Business.DFe.XML.NFe.InutNFeInfInut
oInfInut.Ano		= "24"
oInfInut.CNPJ		= "36550752000173"
oInfInut.CUF		= UFBrasil.PA
oInfInut.Mod		= ModeloDFe.NFCe
oInfInut.NNFIni		= 3552
oInfInut.NNFFin		= 3552
oInfInut.Serie		= 1
oInfInut.TpAmb		= TipoAmbiente.Producao
oInfInut.XJust		= "Inutilização de numeração por erro no sequenciador de NF do software"

oInutNFe.InfInut	= oInfInut

EDT_RetornoWSString	= "Versao schema: " + oInutNFe.Versao + CR
EDT_RetornoWSString += "Ano: " + oInutNFe.InfInut.Ano + CR 
EDT_RetornoWSString += "CNPJ: " + oInutNFe.InfInut.CNPJ + CR + CR

WHEN EXCEPTION IN
	//Consumir o serviço
	oInutilizacao is Unimake.Business.DFe.Servicos.NFCe.Inutilizacao()
	oInutilizacao.SetXMLConfiguracao(oInutNFe, oConfiguracao)
	
	// Gravar o XML assinado no HD
	xmlAssinado  is string = oInutilizacao.GetConteudoXMLAssinado()
	EDT_RetornoWSString += "XML Assinado: " + CR + xmlAssinado + CR + CR
	
	fDelete("d:\testenfe\InutilizacaoNFCe.xml")
	fSaveText("d:\testenfe\InutilizacaoNFCe.xml", xmlAssinado)
	
	//Enviar o XML para a SEFAZ
	oInutilizacao.Executar(oInutNFe, oConfiguracao)
	
	//Ver retorno da SEFAZ
	EDT_RetornoWSString += "XML Retornado: " + CR + oInutilizacao.RetornoWSString + CR + CR
	
	//Ver o conteúdo da tag CStat e XMotivo 
	oRetInutNFe is Unimake.Business.DFe.XML.NFe.RetInutNFe <- oInutilizacao.Result
	
	EDT_RetornoWSString += "CStat: " + oRetInutNFe.InfInut.CStat + CR
	EDT_RetornoWSString += "XMotivo: " + oRetInutNFe.InfInut.XMotivo + CR + CR	
	
	IF oRetInutNFe.InfInut.CStat = 102 //102 = Inutilização Homologada
		//oRetEvento Is Unimake.Business.DFe.XML.NFe.RetEvento <- oRecepcaoEvento.Result.GetRetEvento(I - 1)
		oInutilizacao.GravarXmlDistribuicao("tmp\testenfe") // Grava o XML de distribuição					
	ELSE
		// Já existe pedido de Inutilização para esta sequencia, só vamos finalizar gerando o XML de distribuição
		IF oRetInutNFe.InfInut.CStat = 563 
			//info(oRetInutNFe.InfInut.CStat + " " + oRetInutNFe.InfInut.XMotivo)		
			
			oProcInutNFe is Unimake.Business.DFe.XML.NFe.ProcInutNFe
			oProcInutNFe.InutNFe = oInutilizacao.ProcInutNFeResult.InutNFe
			oProcInutNFe.RetInutNFe = oRetInutNFe
			//Ajustar o CStat e XMotivo para o de homologado		
			oProcInutNFe.RetInutNFe.InfInut.CStat				= 102
			oProcInutNFe.RetInutNFe.InfInut.XMotivo				= "Inutilizacao de numero homologado"

			//Gravar o XML de Distribuicao
			xmlDistribuicao		is string	= oProcInutNFe.GerarXMLString()
			nomeArqDistribuicao	is string	= oInutilizacao.ProcInutNFeResult.NomeArquivoDistribuicao
			
			fDelete("d:\testenfe\" + nomeArqDistribuicao)
			fSaveText("d:\testenfe\" + nomeArqDistribuicao, xmlDistribuicao)
		ELSE
			// Outras rejeições
			// Realizar as ações necessárias					
		END
	END
DO
	Info(ExceptionInfo(errFullDetails)) //Ele também pega o conteúdo da Exception do lado do C#, importante envolver o código em Try/Catch
END
